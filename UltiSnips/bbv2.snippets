snippet filetype "define a file type" b
import type ;
type.register ${1:VERBATIM} : ${2:`!p snip.rv = t[1].lower()`} ;
endsnippet 

snippet scanner "define new scanner" b
import scanner ;
class ${1:verbatim}-scanner : common-scanner
{
	rule pattern ( )
	{
		return "^\s*include[ ]*\"([^\"]*)\"" ;
	}
}

scanner.register $1-scanner : include ;
type.set-scanner ${2:`!p snip.rv = t[1].upper()`} : $1-scanner ;
${0}
endsnippet

snippet generator "define new generator" b
import generators ;
generators.register-standard ${1:verbatim}.$4 : ${2:`!p snip.rv = t[1].upper()`} : ${3:TARGET} ;
actions ${4:inline-file}
{
	${5:${6:"./inline-file.py"} "\$(<)" "\$(>)"}
}
${0}
endsnippet
